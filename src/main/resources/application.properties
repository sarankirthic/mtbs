spring.application.name=mts

# Server configuration
server.port=8080
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=never
server.error.include-exception=false
server.tomcat.max-threads=200
server.tomcat.min-spare-threads=10

# db config
spring.datasource.url=${DB_URL:jdbc:mysql://localhost:3306/movie_db
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# jpa stuff
spring.jpa.hibernate.ddl-auto=none
# Show SQL queries for debugging
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.format_sql=true
springdoc.api-docs.path=/api-docs

# enable sql init (data.sql and schema.sql) for mysql
# todo: check if this works with prod db
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true
spring.sql.init.schema-locations=classpath:schema.sql
spring.sql.init.data-locations=classpath:data.sql


# jwt config - don't change secret unless u know what ur doing!
jwt.secret=${JWT_SECRET:UqC2dkPJZQQQm0KyQcyl6IYx7P1GZgYHkGQFB8TnW+8QYoHpZi5p0AfXs1Oe5KIELHMjdnMhXzmW4AYxITXDOw==}
# JWT expiration time (1hr in ms)
jwt.expiration=${JWT_EXPIRATION:3600000}

# rate limiting
resilience4j.ratelimiter.instances.basic.limitForPeriod=100
resilience4j.ratelimiter.instances.basic.limitRefreshPeriod=1m
resilience4j.ratelimiter.instances.basic.timeoutDuration=1s

# logging - might need to adjust in prod
logging.level.in.lakshay=DEBUG
logging.level.org.springframework=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.boot=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
# Enable debug mode to see detailed error information
debug=true
# stripe
stripe.api.key=${STRIPE_API_KEY:sk_test_dummy_key}
stripe.webhook.secret=${STRIPE_WEBHOOK_SECRET:whsec_dummy_secret}

# aws s3 - using dummy vals for local dev
aws.access.key.id=${AWS_ACCESS_KEY_ID:dummy-access-key}
aws.secret.access.key=${AWS_SECRET_ACCESS_KEY:dummy-secret-key}
aws.s3.bucket.name=${AWS_S3_BUCKET_NAME:dummy-bucket-name}
aws.s3.region=${AWS_S3_REGION:us-east-1}

# file upload limits
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# cors settings for frontend
spring.web.cors.allowed-origins=http://localhost:5173
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,PATCH,OPTIONS
spring.web.cors.allowed-headers=Authorization,Content-Type,X-Requested-With,Accept,Origin,Access-Control-Request-Method,Access-Control-Request-Headers
spring.web.cors.exposed-headers=Authorization,Content-Type
spring.web.cors.allow-credentials=true
spring.web.cors.max-age=3600

# disable flyway - we're using schema.sql instead
spring.flyway.enabled=false

# email config
spring.mail.host=${MAIL_HOST:smtp.gmail.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME:youremail@example.com}
spring.mail.password=${MAIL_PASSWORD:your-password}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# pdf receipt stuff
pdf.receipt.directory=receipts
app.name=CineTicket  # used in receipts

